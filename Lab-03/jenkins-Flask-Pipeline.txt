pipeline{
    agent any
    
    environment{
        SONAR_HOME = tool "mysonarqubescanner"
        DOCKER_IMAGE_NAME = "jenkins-flask-repository"
        DOCKER_TAG = "1.0"
        
    }

    stages {
        stage('Clone the repository') {
            steps {
                git branch: 'master', url: 'https://github.com/uday5252/flask-web-app.git'
            }
        }
        
        stage('Scan using Sonarqube') {
            steps {
                script{
                    withSonarQubeEnv("sonarcontent"){
                        sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=flask-web-app -Dsonar.projectKey=flask-web-app"
                    }    
                }
            }
        }

    
        stage('Build the docker image') {
                steps {
                    script{
                        sh "docker build -t $DOCKER_IMAGE_NAME:$DOCKER_TAG ."
                    }
                }
            }
            
        stage('Scan the docker image using trivy') {
                steps {
                    script{
                        sh "trivy image $DOCKER_IMAGE_NAME:$DOCKER_TAG"
                    }
                }
            }
            
        stage('Push the docker image to ECR') {
                steps {
                    script{
                        sh "export AWS_PROFILE=default"
                        sh "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/o0m4c1x7"
                        sh "docker tag $DOCKER_IMAGE_NAME:$DOCKER_TAG public.ecr.aws/o0m4c1x7/$DOCKER_IMAGE_NAME:$DOCKER_TAG"
                        sh "docker push public.ecr.aws/o0m4c1x7/$DOCKER_IMAGE_NAME:$DOCKER_TAG"
                    }
                }
            }
            
            stage('Deploy the flask app within docker container') {
                steps {
                    script{
                        sh "docker run -d -it -p 5000:5000 jenkins-flask-repository:1.0"
                    }
                }
            }
    
        
    }
}








FREE UP SPACE

1️⃣ Clear Unused Docker Images & Containers

docker system prune -a


2️⃣ Remove Old Jenkins Builds & Logs

sudo rm -rf /var/lib/jenkins/workspace/*
sudo rm -rf /var/log/jenkins/*


3️⃣ Delete Unused Packages

sudo apt autoremove -y
sudo apt clean


4️⃣ Check Large Files

sudo du -ah /var | sort -rh | head -20
